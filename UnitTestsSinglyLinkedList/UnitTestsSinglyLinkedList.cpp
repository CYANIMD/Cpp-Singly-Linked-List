#include "pch.h"
#include "CppUnitTest.h"
#include <initializer_list>
#include "../SinglyLinkedList/singlyLinkedList.h"

using namespace Microsoft::VisualStudio::CppUnitTestFramework;

namespace UnitTestsSinglyLinkedList
{
	TEST_CLASS(UnitTestsSinglyLinkedList)
	{
	public:
		TEST_METHOD(TEST_CONSTRUCTOR_AND_CONSTRUCTOR_LIST)
		{
			singlyLinkedList<int> emptyIntList{ };
			singlyLinkedList<int> intList1 {-2};
			singlyLinkedList<int> intList2{ -2, -1 };
			singlyLinkedList<int> intList3{ -2, -1, 0 };
			singlyLinkedList<int> intList4{ -2, -1, 0, 1 };
			singlyLinkedList<int> intList5{ -2, -1, 0, 1, 2 };

			Assert::IsTrue(emptyIntList == std::initializer_list<int>{});
			Assert::IsTrue(intList1 == std::initializer_list<int>{-2});
			Assert::IsTrue(intList2 == std::initializer_list<int>{-2, -1});
			Assert::IsTrue(intList3 == std::initializer_list<int>{-2, -1, 0});
			Assert::IsTrue(intList4 == std::initializer_list<int>{-2, -1, 0, 1 });
			Assert::IsTrue(intList5 == std::initializer_list<int>{-2, -1, 0, 1, 2});

			singlyLinkedList<double> emptyDoubleList{ };
			singlyLinkedList<double> doubleList1{ -6.22 };
			singlyLinkedList<double> doubleList2{ -6.22, -1.65 };
			singlyLinkedList<double> doubleList3{ -6.22, -1.65, 0 };
			singlyLinkedList<double> doubleList4{ -6.22, -1.65, 0, 2.72 };
			singlyLinkedList<double> doubleList5{ -6.22, -1.65, 0, 2.72, 3.14 };

			Assert::IsTrue(emptyDoubleList == std::initializer_list<double>{});
			Assert::IsTrue(doubleList1 == std::initializer_list<double>{-6.22});
			Assert::IsTrue(doubleList2 == std::initializer_list<double>{-6.22, -1.65});
			Assert::IsTrue(doubleList3 == std::initializer_list<double>{-6.22, -1.65, 0});
			Assert::IsTrue(doubleList4 == std::initializer_list<double>{-6.22, -1.65, 0, 2.72 });
			Assert::IsTrue(doubleList5 == std::initializer_list<double>{-6.22, -1.65, 0, 2.72, 3.14});
		}
		TEST_METHOD(TEST_SIZE) {
			singlyLinkedList<int> intList{ };
			Assert::IsTrue(intList.size() == 0);
			intList = { -2 };
			Assert::IsTrue(intList.size() == 1);
			intList = { -2, -1 };
			Assert::IsTrue(intList.size() == 2);
			intList = { -2, -1, 0 };
			Assert::IsTrue(intList.size() == 3);
			intList = { -2, -1, 0, 1 };
			Assert::IsTrue(intList.size() == 4);
			intList = { -2, -1, 0, 1, 2 };
			Assert::IsTrue(intList.size() == 5);

			singlyLinkedList<double> doubleList{ };
			Assert::IsTrue(doubleList.size() == 0);
			doubleList = { -6.22 };
			Assert::IsTrue(doubleList.size() == 1);
			doubleList = { -6.22, -1.65 };
			Assert::IsTrue(doubleList.size() == 2);
			doubleList = { -6.22, -1.65, 0 };
			Assert::IsTrue(doubleList.size() == 3);
			doubleList = { -6.22, -1.65, 0, 2.72 };
			Assert::IsTrue(doubleList.size() == 4);
			doubleList = { -6.22, -1.65, 0, 2.72, 3.14 };
			Assert::IsTrue(doubleList.size() == 5);
		}
		TEST_METHOD(TEST_IS_EMPTY) {
			singlyLinkedList<int> intList{ };
			Assert::IsTrue(intList.isEmpty());
			intList = { -2 };
			Assert::IsFalse(intList.isEmpty());
			intList = { -2, -1 };
			Assert::IsFalse(intList.isEmpty());
			intList = { -2, -1, 0 };
			Assert::IsFalse(intList.isEmpty());
			intList = { -2, -1, 0, 1 };
			Assert::IsFalse(intList.isEmpty());
			intList = { -2, -1, 0, 1, 2 };
			Assert::IsFalse(intList.isEmpty());

			singlyLinkedList<double> doubleList{ };
			Assert::IsTrue(doubleList.isEmpty());
			doubleList = { -6.22 };
			Assert::IsFalse(doubleList.isEmpty());
			doubleList = { -6.22, -1.65 };
			Assert::IsFalse(doubleList.isEmpty());
			doubleList = { -6.22, -1.65, 0 };
			Assert::IsFalse(doubleList.isEmpty());
			doubleList = { -6.22, -1.65, 0, 2.72 };
			Assert::IsFalse(doubleList.isEmpty());
			doubleList = { -6.22, -1.65, 0, 2.72, 3.14 };
			Assert::IsFalse(doubleList.isEmpty());
		}
		TEST_METHOD(TEST_CONTAINS) {
			singlyLinkedList<int> emptyIntList{ };
			singlyLinkedList<int> intList1{ -2 };
			singlyLinkedList<int> intList2{ -2, -1 };
			singlyLinkedList<int> intList3{ -2, -1, 0 };
			singlyLinkedList<int> intList4{ -2, -1, 0, 1 };
			singlyLinkedList<int> intList5{ -2, -1, 0, 1, 2 };

			Assert::IsFalse(emptyIntList.contains(0));
			Assert::IsFalse(emptyIntList.contains(-5));
			Assert::IsFalse(emptyIntList.contains(5));

			Assert::IsFalse(intList1.contains(0));
			Assert::IsFalse(intList1.contains(-1));
			Assert::IsFalse(intList1.contains(3));
			Assert::IsTrue(intList1.contains(-2));

			Assert::IsFalse(intList2.contains(0));
			Assert::IsFalse(intList2.contains(-3));
			Assert::IsFalse(intList2.contains(3));
			Assert::IsTrue(intList2.contains(-2));
			Assert::IsTrue(intList2.contains(-1));

			Assert::IsFalse(intList3.contains(4));
			Assert::IsFalse(intList3.contains(-6));
			Assert::IsFalse(intList3.contains(3));
			Assert::IsTrue(intList3.contains(-2));
			Assert::IsTrue(intList3.contains(-1));
			Assert::IsTrue(intList3.contains(0));

			Assert::IsFalse(intList4.contains(-8));
			Assert::IsFalse(intList4.contains(8));
			Assert::IsFalse(intList4.contains(4));
			Assert::IsTrue(intList4.contains(-2));
			Assert::IsTrue(intList4.contains(-1));
			Assert::IsTrue(intList4.contains(0));
			Assert::IsTrue(intList4.contains(1));

			Assert::IsFalse(intList5.contains(-6));
			Assert::IsFalse(intList5.contains(9));
			Assert::IsFalse(intList5.contains(3));
			Assert::IsTrue(intList5.contains(-2));
			Assert::IsTrue(intList5.contains(-1));
			Assert::IsTrue(intList5.contains(0));
			Assert::IsTrue(intList5.contains(1));
			Assert::IsTrue(intList5.contains(2));

			singlyLinkedList<double> doubleList{ };
			Assert::IsFalse(doubleList.contains(0.0));
			Assert::IsFalse(doubleList.contains(3.05));
			Assert::IsFalse(doubleList.contains(-1.98));

			doubleList = { -6.22 };
			Assert::IsFalse(doubleList.contains(2));
			Assert::IsFalse(doubleList.contains(-5.6));
			Assert::IsFalse(doubleList.contains(1.65));
			Assert::IsTrue(doubleList.contains(-6.22));

			doubleList = { -6.22, -1.65 };
			Assert::IsFalse(doubleList.contains(1.87));
			Assert::IsFalse(doubleList.contains(-9.12));
			Assert::IsFalse(doubleList.contains(9));
			Assert::IsTrue(doubleList.contains(-6.22));
			Assert::IsTrue(doubleList.contains(-1.65));

			doubleList = { -6.22, -1.65, 0 };
			Assert::IsFalse(doubleList.contains(4));
			Assert::IsFalse(doubleList.contains(2.15));
			Assert::IsFalse(doubleList.contains(6.09));
			Assert::IsTrue(doubleList.contains(-6.22));
			Assert::IsTrue(doubleList.contains(-1.65));
			Assert::IsTrue(doubleList.contains(0.0));
			
			doubleList = { -6.22, -1.65, 0, 2.72 };
			Assert::IsFalse(doubleList.contains(6.22));
			Assert::IsFalse(doubleList.contains(-9.1));
			Assert::IsFalse(doubleList.contains(5));
			Assert::IsTrue(doubleList.contains(-6.22));
			Assert::IsTrue(doubleList.contains(-1.65));
			Assert::IsTrue(doubleList.contains(0.0));
			Assert::IsTrue(doubleList.contains(2.72));

			doubleList = { -6.22, -1.65, 0, 2.72, 3.14 };
			Assert::IsFalse(doubleList.contains(-2));
			Assert::IsFalse(doubleList.contains(9.82));
			Assert::IsFalse(doubleList.contains(-3.14));
			Assert::IsTrue(doubleList.contains(-6.22));
			Assert::IsTrue(doubleList.contains(-1.65));
			Assert::IsTrue(doubleList.contains(0.0));
			Assert::IsTrue(doubleList.contains(2.72));
			Assert::IsTrue(doubleList.contains(3.14));
		}
		TEST_METHOD(TEST_TOP) {
			singlyLinkedList<int> intList{ };
			Assert::ExpectException<std::invalid_argument>([&intList]() {intList.front(); });

			intList = { 2 };
			Assert::AreEqual(intList.front(), 2);
			intList = { 0 };
			Assert::AreEqual(intList.front(), 0);
			intList = { -2 };
			Assert::AreEqual(intList.front(), -2);

			intList = { 1, 3 };
			Assert::AreEqual(intList.front(), 1);
			intList = { -2, 0 };
			Assert::AreEqual(intList.front(), -2);
			intList = { 0, -1 };
			Assert::AreEqual(intList.front(), 0);

			intList = { -2, 1, 3 };
			Assert::AreEqual(intList.front(), -2);
			intList = { 5, -1, 0 };
			Assert::AreEqual(intList.front(), 5);
			intList = { 0, -4, 1 };
			Assert::AreEqual(intList.front(), 0);

			intList = { -8, -2, 0, 1 };
			Assert::AreEqual(intList.front(), -8);
			intList = { 0, -6, 1, 2 };
			Assert::AreEqual(intList.front(), 0);
			intList = { 3, -3, 0, 9 };
			Assert::AreEqual(intList.front(), 3);

			intList = { 4, -8, 9, 0, -3 };
			Assert::AreEqual(intList.front(), 4);
			intList = { -1, 1, 2, 1, 3 };
			Assert::AreEqual(intList.front(), -1);
			intList = { 6, 0, -1, 9, 7 };
			Assert::AreEqual(intList.front(), 6);

			singlyLinkedList<double> doubleList{ };
			Assert::ExpectException<std::invalid_argument>([&doubleList]() {doubleList.front(); });

			doubleList = { 3.14 };
			Assert::AreEqual(doubleList.front(), 3.14);
			doubleList = { 1.65 };
			Assert::AreEqual(doubleList.front(), 1.65);
			doubleList = { -0.5 };
			Assert::AreEqual(doubleList.front(), -0.5);

			doubleList = { -1.76, 2.72 };
			Assert::AreEqual(doubleList.front(), -1.76);
			doubleList = { 0, 6.22 };
			Assert::AreEqual(doubleList.front(), 0.0);
			doubleList = { 8.31, 3.14 };
			Assert::AreEqual(doubleList.front(), 8.31);

			doubleList = { -3.21, 0, -6.54321 };
			Assert::AreEqual(doubleList.front(), -3.21);
			doubleList = { 5.401, -3.12, 9.87 };
			Assert::AreEqual(doubleList.front(), 5.401);
			doubleList = { 22.4, 67.89, -1.5 };
			Assert::AreEqual(doubleList.front(), 22.4);

			doubleList = { -5.05, -3.2, 0, 1.987 };
			Assert::AreEqual(doubleList.front(), -5.05);
			doubleList = { 1.2345, -5.4321, 0.123, 3.210 };
			Assert::AreEqual(doubleList.front(), 1.2345);
			doubleList = { 0.05, 2.5, -2.5 };
			Assert::AreEqual(doubleList.front(), 0.05);

			doubleList = { 6.789, -3.45, 5.22, 0, -1.2 };
			Assert::AreEqual(doubleList.front(), 6.789);
			doubleList = { -1.12, -5.67, 0.5, -0.5, 1 };
			Assert::AreEqual(doubleList.front(), -1.12);
			doubleList = { 0.0005 , -3.333, 9.56, 5.43, -9.43 };
			Assert::AreEqual(doubleList.front(), 0.0005);
		}
		TEST_METHOD(TEST_FRONT) {
			singlyLinkedList<int> intList{ };
			Assert::ExpectException<std::invalid_argument>([&intList]() {intList.top(); });

			intList = { 2 };
			Assert::AreEqual(intList.top(), 2);
			intList = { 0 };
			Assert::AreEqual(intList.top(), 0);
			intList = { -2 };
			Assert::AreEqual(intList.top(), -2);

			intList = { 1, 3 };
			Assert::AreEqual(intList.top(), 3);
			intList = { -2, 0 };
			Assert::AreEqual(intList.top(), 0);
			intList = { 0, -1 };
			Assert::AreEqual(intList.top(), -1);

			intList = { -2, 1, 3 };
			Assert::AreEqual(intList.top(), 3);
			intList = { 5, -1, 0 };
			Assert::AreEqual(intList.top(), 0);
			intList = { 0, -4, 1 };
			Assert::AreEqual(intList.top(), 1);

			intList = { -8, -2, 0, 1 };
			Assert::AreEqual(intList.top(), 1);
			intList = { 0, -6, 1, 2 };
			Assert::AreEqual(intList.top(), 2);
			intList = { 3, -3, 0, 9 };
			Assert::AreEqual(intList.top(), 9);

			intList = { 4, -8, 9, 0, -3 };
			Assert::AreEqual(intList.top(), -3);
			intList = { -1, 1, 2, 1, 3 };
			Assert::AreEqual(intList.top(), 3);
			intList = { 6, 0, -1, 9, 7 };
			Assert::AreEqual(intList.top(), 7);

			singlyLinkedList<double> doubleList{ };
			Assert::ExpectException<std::invalid_argument>([&doubleList]() {doubleList.top(); });

			doubleList = { 3.14 };
			Assert::AreEqual(doubleList.top(), 3.14);
			doubleList = { 1.65 };
			Assert::AreEqual(doubleList.top(), 1.65);
			doubleList = { -0.5 };
			Assert::AreEqual(doubleList.top(), -0.5);

			doubleList = { -1.76, 2.72 };
			Assert::AreEqual(doubleList.top(), 2.72);
			doubleList = { 0, 6.22 };
			Assert::AreEqual(doubleList.top(), 6.22);
			doubleList = { 8.31, 3.14 };
			Assert::AreEqual(doubleList.top(), 3.14);

			doubleList = { -3.21, 0, -6.54321 };
			Assert::AreEqual(doubleList.top(), -6.54321);
			doubleList = { 5.401, -3.12, 9.87 };
			Assert::AreEqual(doubleList.top(), 9.87);
			doubleList = { 22.4, 67.89, -1.5 };
			Assert::AreEqual(doubleList.top(), -1.5);

			doubleList = { -5.05, -3.2, 0, 1.987 };
			Assert::AreEqual(doubleList.top(), 1.987);
			doubleList = { 1.2345, -5.4321, 0.123, 3.210 };
			Assert::AreEqual(doubleList.top(), 3.210);
			doubleList = { 0.05, 2.5, -2.5 };
			Assert::AreEqual(doubleList.top(), -2.5);

			doubleList = { 6.789, -3.45, 5.22, 0, -1.2 };
			Assert::AreEqual(doubleList.top(), -1.2);
			doubleList = { -1.12, -5.67, 0.5, -0.5, 1 };
			Assert::AreEqual(doubleList.top(), 1.0);
			doubleList = { 0.0005 , -3.333, 9.56, 5.43, -9.43 };
			Assert::AreEqual(doubleList.top(), -9.43);
		}
		TEST_METHOD(TEST_CLEAR) {
			singlyLinkedList<int> intList{};
			intList.clear();
			Assert::IsTrue(intList == std::initializer_list<int>());
			intList = {-1};
			intList.clear();
			Assert::IsTrue(intList == std::initializer_list<int>());
			intList = { 0 };
			intList.clear();
			Assert::IsTrue(intList == std::initializer_list<int>());
			intList = { 1 };
			intList.clear();
			Assert::IsTrue(intList == std::initializer_list<int>());
			intList = { 1, 1 };
			intList.clear();
			Assert::IsTrue(intList == std::initializer_list<int>());
			intList = { -1, -2 };
			intList.clear();
			Assert::IsTrue(intList == std::initializer_list<int>());
			intList = { 0, 2 };
			intList.clear();
			Assert::IsTrue(intList == std::initializer_list<int>());
			intList = { -1, 0, 1 };
			intList.clear();
			Assert::IsTrue(intList == std::initializer_list<int>());
			intList = { -2, -1, 1 };
			intList.clear();
			Assert::IsTrue(intList == std::initializer_list<int>());
			intList = { 1, 1, 2 };
			intList.clear();
			Assert::IsTrue(intList == std::initializer_list<int>());
			intList = { -3, -2, -1, 0 };
			intList.clear();
			Assert::IsTrue(intList == std::initializer_list<int>());
			intList = { -1, 0, 1, 2 };
			intList.clear();
			Assert::IsTrue(intList == std::initializer_list<int>());
			intList = { 1, 1, 2, 3 };
			intList.clear();
			Assert::IsTrue(intList == std::initializer_list<int>());
			intList = { -4, -3, -2, -1, 0 };
			intList.clear();
			Assert::IsTrue(intList == std::initializer_list<int>());
			intList = { -2, -1, 0, 1, 2 };
			intList.clear();
			Assert::IsTrue(intList == std::initializer_list<int>());
			intList = { 1, 1, 2, 3, 5 };
			intList.clear();
			Assert::IsTrue(intList == std::initializer_list<int>());

			singlyLinkedList<double> doubleList{};
			doubleList.clear();
			Assert::IsTrue(doubleList == std::initializer_list<double>());
			doubleList = {3.14};
			doubleList.clear();
			Assert::IsTrue(doubleList == std::initializer_list<double>());
			doubleList = { -2.05 };
			doubleList.clear();
			Assert::IsTrue(doubleList == std::initializer_list<double>());
			doubleList = { 0 };
			doubleList.clear();
			Assert::IsTrue(doubleList == std::initializer_list<double>());
			doubleList = { 1.65, 1.76 };
			doubleList.clear();
			Assert::IsTrue(doubleList == std::initializer_list<double>());
			doubleList = { -2.5, -0.5 };
			doubleList.clear();
			Assert::IsTrue(doubleList == std::initializer_list<double>());
			doubleList = {-0.3, 0.93 };
			doubleList.clear();
			Assert::IsTrue(doubleList == std::initializer_list<double>());
			doubleList = { 0, 1.23, 4.56 };
			doubleList.clear();
			Assert::IsTrue(doubleList == std::initializer_list<double>());
			doubleList = { -5.43, -2.10, 1.05 };
			doubleList.clear();
			Assert::IsTrue(doubleList == std::initializer_list<double>());
			doubleList = { -5.55, -3.33, -7.77 };
			doubleList.clear();
			Assert::IsTrue(doubleList == std::initializer_list<double>());
			doubleList = { -6.65, -8.54, -4.43, -6.5 };
			doubleList.clear();
			Assert::IsTrue(doubleList == std::initializer_list<double>());
			doubleList = { 2.9, -1.5, 3.9, -2.5 };
			doubleList.clear();
			Assert::IsTrue(doubleList == std::initializer_list<double>());
			doubleList = { 9.1, 3.56, 7.09, 5 };
			doubleList.clear();
			Assert::IsTrue(doubleList == std::initializer_list<double>());
			doubleList = { 1.65, 1.78, 2.72, 3.14, 6.28 };
			doubleList.clear();
			Assert::IsTrue(doubleList == std::initializer_list<double>());
			doubleList = { -2.3, -2.09, -1.89, -1.56, -0.49 };
			doubleList.clear();
			Assert::IsTrue(doubleList == std::initializer_list<double>());
			doubleList = { -0.32, -0.56, 0, 1.89, 9.32 };
			doubleList.clear();
			Assert::IsTrue(doubleList == std::initializer_list<double>());
		}
		TEST_METHOD(TEST_PUSH_FRONT) {
			singlyLinkedList<int> intList{};
			intList.push_front(5);
			Assert::IsTrue(intList == std::initializer_list<int>{5});
			intList = {};
			intList.push_front(0);
			Assert::IsTrue(intList == std::initializer_list<int>{0});
			intList = {};
			intList.push_front(-5);
			Assert::IsTrue(intList == std::initializer_list<int>{-5});

			intList = {};
			intList.push_front(-5);
			intList.push_front(-2);
			Assert::IsTrue(intList == std::initializer_list<int>{-2, -5});
			intList = {};
			intList.push_front(2);
			intList.push_front(-6);
			Assert::IsTrue(intList == std::initializer_list<int>{-6, 2});
			intList = {};
			intList.push_front(3);
			intList.push_front(9);
			Assert::IsTrue(intList == std::initializer_list<int>{9, 3});

			intList = {};
			intList.push_front(-8);
			intList.push_front(-1);
			intList.push_front(-3);
			Assert::IsTrue(intList == std::initializer_list<int>{-3, -1, -8});
			intList = {};
			intList.push_front(0);
			intList.push_front(-1);
			intList.push_front(2);
			Assert::IsTrue(intList == std::initializer_list<int>{2, -1, 0});
			intList = {};
			intList.push_front(2);
			intList.push_front(5);
			intList.push_front(1);
			Assert::IsTrue(intList == std::initializer_list<int>{1, 5, 2});

			intList = {};
			intList.push_front(-9);
			intList.push_front(-3);
			intList.push_front(-2);
			intList.push_front(-1);
			Assert::IsTrue(intList == std::initializer_list<int>{-1, -2, -3, -9});
			intList = {};
			intList.push_front(5);
			intList.push_front(0);
			intList.push_front(-3);
			intList.push_front(8);
			Assert::IsTrue(intList == std::initializer_list<int>{8, -3, 0, 5});
			intList = {};
			intList.push_front(6);
			intList.push_front(1);
			intList.push_front(2);
			intList.push_front(8);
			Assert::IsTrue(intList == std::initializer_list<int>{8, 2, 1, 6});

			intList = {};
			intList.push_front(-1);
			intList.push_front(-2);
			intList.push_front(-1);
			intList.push_front(-6);
			intList.push_front(-2);
			Assert::IsTrue(intList == std::initializer_list<int>{-2, -6, -1, -2, -1});
			intList = {};
			intList.push_front(5);
			intList.push_front(0);
			intList.push_front(3);
			intList.push_front(-5);
			intList.push_front(1);
			Assert::IsTrue(intList == std::initializer_list<int>{1, -5, 3, 0, 5});
			intList = {};
			intList.push_front(8);
			intList.push_front(2);
			intList.push_front(2);
			intList.push_front(2);
			intList.push_front(6);
			Assert::IsTrue(intList == std::initializer_list<int>{6, 2, 2, 2, 8});

			singlyLinkedList<double> doubleList{};
			doubleList.push_front(3.1415);
			Assert::IsTrue(doubleList == std::initializer_list<double>{3.1415});
			doubleList = {};
			doubleList.push_front(-2.72);
			Assert::IsTrue(doubleList == std::initializer_list<double>{-2.72});
			doubleList = {};
			doubleList.push_front(0);
			Assert::IsTrue(doubleList == std::initializer_list<double>{0});

			doubleList = {};
			doubleList.push_front(1.4142);
			doubleList.push_front(1.7321);
			Assert::IsTrue(doubleList == std::initializer_list<double>{1.7321, 1.4142});
			doubleList = {};
			doubleList.push_front(-1.168);
			doubleList.push_front(-0.5772);
			Assert::IsTrue(doubleList == std::initializer_list<double>{-0.5772 , -1.168});
			doubleList = {};
			doubleList.push_front(0.7026);
			doubleList.push_front(-0.6602);
			Assert::IsTrue(doubleList == std::initializer_list<double>{-0.6602, 0.7026});

			doubleList = {};
			doubleList.push_front(0.7642);
			doubleList.push_front(3.05);
			doubleList.push_front(8.31);
			Assert::IsTrue(doubleList == std::initializer_list<double>{8.31, 3.05, 0.7642});
			doubleList = {};
			doubleList.push_front(4.18);
			doubleList.push_front(-1.602);
			doubleList.push_front(-1.16);
			Assert::IsTrue(doubleList == std::initializer_list<double>{-1.16, -1.602, 4.18});
			doubleList = {};
			doubleList.push_front(-8.5);
			doubleList.push_front(-1.325);
			doubleList.push_front(-5.209);
			Assert::IsTrue(doubleList == std::initializer_list<double>{-5.209, -1.325, -8.5});

			doubleList = {};
			doubleList.push_front(10.85);
			doubleList.push_front(8.9876);
			doubleList.push_front(1.25);
			doubleList.push_front(3.565);
			Assert::IsTrue(doubleList == std::initializer_list<double>{3.565, 1.25, 8.9876, 10.85});
			doubleList = {};
			doubleList.push_front(5.55);
			doubleList.push_front(-3.92);
			doubleList.push_front(5.55);
			doubleList.push_front(-2.95);
			Assert::IsTrue(doubleList == std::initializer_list<double>{-2.95, 5.55, -3.92, 5.55});
			doubleList = {};
			doubleList.push_front(-6.28);
			doubleList.push_front(-0.06);
			doubleList.push_front(-2.15);
			doubleList.push_front(-5.28);
			Assert::IsTrue(doubleList == std::initializer_list<double>{-5.28, -2.15, -0.06, -6.28});

			doubleList = {};
			doubleList.push_front(2.25);
			doubleList.push_front(5.6969);
			doubleList.push_front(1.99);
			doubleList.push_front(6.314);
			doubleList.push_front(2.527);
			Assert::IsTrue(doubleList == std::initializer_list<double>{2.527, 6.314, 1.99, 5.6969, 2.25});
			doubleList = {};
			doubleList.push_front(-9.31);
			doubleList.push_front(5.26);
			doubleList.push_front(6.25);
			doubleList.push_front(-2);
			doubleList.push_front(-2);
			Assert::IsTrue(doubleList == std::initializer_list<double>{-2, -2, 6.25, 5.26, -9.31});
			doubleList = {};
			doubleList.push_front(-3);
			doubleList.push_front(-3);
			doubleList.push_front(-6.98);
			doubleList.push_front(-3.05);
			doubleList.push_front(-3);
			Assert::IsTrue(doubleList == std::initializer_list<double>{-3, - 3.05, -6.98, -3, -3});
		}
		TEST_METHOD(TEST_PUSH_BACK) {
			singlyLinkedList<int> intList{};
			intList.push_back(5);
			Assert::IsTrue(intList == std::initializer_list<int>{5});
			intList = {};
			intList.push_back(0);
			Assert::IsTrue(intList == std::initializer_list<int>{0});
			intList = {};
			intList.push_back(-5);
			Assert::IsTrue(intList == std::initializer_list<int>{-5});

			intList = {};
			intList.push_back(-5);
			intList.push_back(-2);
			Assert::IsTrue(intList == std::initializer_list<int>{-5, -2});
			intList = {};
			intList.push_back(2);
			intList.push_back(-6);
			Assert::IsTrue(intList == std::initializer_list<int>{2, -6});
			intList = {};
			intList.push_back(3);
			intList.push_back(9);
			Assert::IsTrue(intList == std::initializer_list<int>{3, 9});

			intList = {};
			intList.push_back(-8);
			intList.push_back(-1);
			intList.push_back(-3);
			Assert::IsTrue(intList == std::initializer_list<int>{-8, -1, -3});
			intList = {};
			intList.push_back(0);
			intList.push_back(-1);
			intList.push_back(2);
			Assert::IsTrue(intList == std::initializer_list<int>{0, -1, 2});
			intList = {};
			intList.push_back(2);
			intList.push_back(5);
			intList.push_back(1);
			Assert::IsTrue(intList == std::initializer_list<int>{2, 5, 1});

			intList = {};
			intList.push_back(-9);
			intList.push_back(-3);
			intList.push_back(-2);
			intList.push_back(-1);
			Assert::IsTrue(intList == std::initializer_list<int>{-9, -3, -2, -1});
			intList = {};
			intList.push_back(5);
			intList.push_back(0);
			intList.push_back(-3);
			intList.push_back(8);
			Assert::IsTrue(intList == std::initializer_list<int>{5, 0, -3, 8});
			intList = {};
			intList.push_back(6);
			intList.push_back(1);
			intList.push_back(2);
			intList.push_back(8);
			Assert::IsTrue(intList == std::initializer_list<int>{6, 1, 2, 8});

			intList = {};
			intList.push_back(-1);
			intList.push_back(-2);
			intList.push_back(-1);
			intList.push_back(-6);
			intList.push_back(-2);
			Assert::IsTrue(intList == std::initializer_list<int>{-1, -2, -1, -6, -2});
			intList = {};
			intList.push_back(5);
			intList.push_back(0);
			intList.push_back(3);
			intList.push_back(-5);
			intList.push_back(1);
			Assert::IsTrue(intList == std::initializer_list<int>{5, 0, 3, -5, 1});
			intList = {};
			intList.push_back(8);
			intList.push_back(2);
			intList.push_back(2);
			intList.push_back(2);
			intList.push_back(6);
			Assert::IsTrue(intList == std::initializer_list<int>{8, 2, 2, 2, 6});

			singlyLinkedList<double> doubleList{};
			doubleList.push_back(3.1415);
			Assert::IsTrue(doubleList == std::initializer_list<double>{3.1415});
			doubleList = {};
			doubleList.push_back(-2.72);
			Assert::IsTrue(doubleList == std::initializer_list<double>{-2.72});
			doubleList = {};
			doubleList.push_back(0);
			Assert::IsTrue(doubleList == std::initializer_list<double>{0});

			doubleList = {};
			doubleList.push_back(1.4142);
			doubleList.push_back(1.7321);
			Assert::IsTrue(doubleList == std::initializer_list<double>{1.4142, 1.7321});
			doubleList = {};
			doubleList.push_back(-1.168);
			doubleList.push_back(-0.5772);
			Assert::IsTrue(doubleList == std::initializer_list<double>{-1.168 , -0.5772});
			doubleList = {};
			doubleList.push_back(0.7026);
			doubleList.push_back(-0.6602);
			Assert::IsTrue(doubleList == std::initializer_list<double>{0.7026 , -0.6602});

			doubleList = {};
			doubleList.push_back(0.7642);
			doubleList.push_back(3.05);
			doubleList.push_back(8.31);
			Assert::IsTrue(doubleList == std::initializer_list<double>{0.7642, 3.05, 8.31});
			doubleList = {};
			doubleList.push_back(4.18);
			doubleList.push_back(-1.602);
			doubleList.push_back(-1.16);
			Assert::IsTrue(doubleList == std::initializer_list<double>{4.18, -1.602, -1.16});
			doubleList = {};
			doubleList.push_back(-8.5);
			doubleList.push_back(-1.325);
			doubleList.push_back(-5.209);
			Assert::IsTrue(doubleList == std::initializer_list<double>{-8.5, -1.325, -5.209});

			doubleList = {};
			doubleList.push_back(10.85);
			doubleList.push_back(8.9876);
			doubleList.push_back(1.25);
			doubleList.push_back(3.565);
			Assert::IsTrue(doubleList == std::initializer_list<double>{10.85, 8.9876, 1.25, 3.565});
			doubleList = {};
			doubleList.push_back(5.55);
			doubleList.push_back(-3.92);
			doubleList.push_back(5.55);
			doubleList.push_back(-2.95);
			Assert::IsTrue(doubleList == std::initializer_list<double>{5.55, -3.92, 5.55, -2.95 });
			doubleList = {};
			doubleList.push_back(-6.28);
			doubleList.push_back(-0.06);
			doubleList.push_back(-2.15);
			doubleList.push_back(-5.28);
			Assert::IsTrue(doubleList == std::initializer_list<double>{-6.28, -0.06, -2.15, -5.28});

			doubleList = {};
			doubleList.push_back(2.25);
			doubleList.push_back(5.6969);
			doubleList.push_back(1.99);
			doubleList.push_back(6.314);
			doubleList.push_back(2.527);
			Assert::IsTrue(doubleList == std::initializer_list<double>{2.25, 5.6969, 1.99, 6.314, 2.527});
			doubleList = {};
			doubleList.push_back(-9.31);
			doubleList.push_back(5.26);
			doubleList.push_back(6.25);
			doubleList.push_back(-2);
			doubleList.push_back(-2);
			Assert::IsTrue(doubleList == std::initializer_list<double>{-9.31, 5.26, 6.25, -2, -2});
			doubleList = {};
			doubleList.push_back(-3);
			doubleList.push_back(-3);
			doubleList.push_back(-6.98);
			doubleList.push_back(-3.05);
			doubleList.push_back(-3);
			Assert::IsTrue(doubleList == std::initializer_list<double>{-3, -3, -6.98, -3.05, -3});
		}
		TEST_METHOD(TEST_POP_FRONT) {
			singlyLinkedList<int> intList{};
			intList.pop_front();
			Assert::IsTrue(intList == std::initializer_list<int>{});

			intList = {1};
			intList.pop_front();
			Assert::IsTrue(intList == std::initializer_list<int>{});
			intList = { -3 };
			intList.pop_front();
			Assert::IsTrue(intList == std::initializer_list<int>{});
			intList = { 0 };
			intList.pop_front();
			Assert::IsTrue(intList == std::initializer_list<int>{});

			intList = { 1, 3 };
			intList.pop_front();
			Assert::IsTrue(intList == std::initializer_list<int>{3});
			intList.pop_front();
			Assert::IsTrue(intList == std::initializer_list<int>{});
			intList = { -3, 0 };
			intList.pop_front();
			Assert::IsTrue(intList == std::initializer_list<int>{0});
			intList.pop_front();
			Assert::IsTrue(intList == std::initializer_list<int>{});
			intList = { -4, -1 };
			intList.pop_front();
			Assert::IsTrue(intList == std::initializer_list<int>{-1});
			intList.pop_front();
			Assert::IsTrue(intList == std::initializer_list<int>{});

			intList = { 2, 4, 3 };
			intList.pop_front();
			Assert::IsTrue(intList == std::initializer_list<int>{4, 3});
			intList.pop_front();
			Assert::IsTrue(intList == std::initializer_list<int>{3});
			intList = { -6, 5, 2 };
			intList.pop_front();
			Assert::IsTrue(intList == std::initializer_list<int>{5, 2});
			intList.pop_front();
			Assert::IsTrue(intList == std::initializer_list<int>{2});
			intList = { -5, -1, -1 };
			intList.pop_front();
			Assert::IsTrue(intList == std::initializer_list<int>{-1, -1});
			intList.pop_front();
			Assert::IsTrue(intList == std::initializer_list<int>{-1});

			intList = { 1, 2, 3, 1 };
			intList.pop_front();
			Assert::IsTrue(intList == std::initializer_list<int>{2, 3, 1});
			intList.pop_front();
			Assert::IsTrue(intList == std::initializer_list<int>{3, 1});
			intList = { -5, 1, 2, -2 };
			intList.pop_front();
			Assert::IsTrue(intList == std::initializer_list<int>{1, 2, -2});
			intList.pop_front();
			Assert::IsTrue(intList == std::initializer_list<int>{2, -2});
			intList = { -3, -2, -2, -3 };
			intList.pop_front();
			Assert::IsTrue(intList == std::initializer_list<int>{-2, -2, -3});
			intList.pop_front();
			Assert::IsTrue(intList == std::initializer_list<int>{-2, -3});

			intList = { 4, 2, 3, 5, 1 };
			intList.pop_front();
			Assert::IsTrue(intList == std::initializer_list<int>{2, 3, 5, 1});
			intList.pop_front();
			Assert::IsTrue(intList == std::initializer_list<int>{3, 5, 1});
			intList = { -2, 0, 1, -3, 5 };
			intList.pop_front();
			Assert::IsTrue(intList == std::initializer_list<int>{0, 1, -3, 5});
			intList.pop_front();
			Assert::IsTrue(intList == std::initializer_list<int>{1, -3, 5});
			intList = { -6, -1, -2, -1, -5 };
			intList.pop_front();
			Assert::IsTrue(intList == std::initializer_list<int>{-1, -2, -1, -5});
			intList.pop_front();
			Assert::IsTrue(intList == std::initializer_list<int>{-2, -1, -5});

			singlyLinkedList<double> doubleList{};
			doubleList.pop_front();
			Assert::IsTrue(doubleList == std::initializer_list<double>{});

			doubleList = {2.25};
			doubleList.pop_front();
			Assert::IsTrue(doubleList == std::initializer_list<double>{});
			doubleList = {0};
			doubleList.pop_front();
			Assert::IsTrue(doubleList == std::initializer_list<double>{});
			doubleList={-1.165};
			doubleList.pop_front();
			Assert::IsTrue(doubleList == std::initializer_list<double>{});

			doubleList={ 3.14, 4.25 };
			doubleList.pop_front();
			Assert::IsTrue(doubleList == std::initializer_list<double>{4.25 });
			doubleList.pop_front();
			Assert::IsTrue(doubleList == std::initializer_list<double>{});
			doubleList={ -1.65, 2.43 };
			doubleList.pop_front();
			Assert::IsTrue(doubleList == std::initializer_list<double>{2.43});
			doubleList.pop_front();
			Assert::IsTrue(doubleList == std::initializer_list<double>{ });
			doubleList={ -5.13, -3.24 };
			doubleList.pop_front();
			Assert::IsTrue(doubleList == std::initializer_list<double>{-3.24});
			doubleList.pop_front();
			Assert::IsTrue(doubleList == std::initializer_list<double>{ });

			doubleList={ 22.4, 1.16, 2.778 };
			doubleList.pop_front();
			Assert::IsTrue(doubleList == std::initializer_list<double>{1.16, 2.778 });
			doubleList.pop_front();
			Assert::IsTrue(doubleList == std::initializer_list<double>{2.778 });
			doubleList={ -0.2, 2.505, -3.09 };
			doubleList.pop_front();
			Assert::IsTrue(doubleList == std::initializer_list<double>{2.505, -3.09});
			doubleList.pop_front();
			Assert::IsTrue(doubleList == std::initializer_list<double>{-3.09 });
			doubleList={ -1.92, -3.82, -2.09 };
			doubleList.pop_front();
			Assert::IsTrue(doubleList == std::initializer_list<double>{-3.82, -2.09});
			doubleList.pop_front();
			Assert::IsTrue(doubleList == std::initializer_list<double>{-2.09 });

			doubleList={ 1.74, 2.91, 1.84, 0.25 };
			doubleList.pop_front();
			Assert::IsTrue(doubleList == std::initializer_list<double>{2.91, 1.84, 0.25 });
			doubleList.pop_front();
			Assert::IsTrue(doubleList == std::initializer_list<double>{1.84, 0.25 });
			doubleList={ -0.95, 2.31, 9.21, -2.3 };
			doubleList.pop_front();
			Assert::IsTrue(doubleList == std::initializer_list<double>{2.31, 9.21, -2.3});
			doubleList.pop_front();
			Assert::IsTrue(doubleList == std::initializer_list<double>{9.21, -2.3 });
			doubleList={ -1.45, -2, -5.65, -2.9 };
			doubleList.pop_front();
			Assert::IsTrue(doubleList == std::initializer_list<double>{-2, -5.65, -2.9});
			doubleList.pop_front();
			Assert::IsTrue(doubleList == std::initializer_list<double>{-5.65, -2.9 });

			doubleList = { 2.95, 3.14, 1.85, 0.59, 3.94 };
			doubleList.pop_front();
			Assert::IsTrue(doubleList == std::initializer_list<double>{3.14, 1.85, 0.59, 3.94 });
			doubleList.pop_front();
			Assert::IsTrue(doubleList == std::initializer_list<double>{1.85, 0.59, 3.94 });
			doubleList = { -2.56, 6.28, -1.5, 0, 9.67 };
			doubleList.pop_front();
			Assert::IsTrue(doubleList == std::initializer_list<double>{6.28, -1.5, 0, 9.67});
			doubleList.pop_front();
			Assert::IsTrue(doubleList == std::initializer_list<double>{ -1.5, 0, 9.67 });
			doubleList = { -0.95, -1.95, -4.13, -2.6, -4};
			doubleList.pop_front();
			Assert::IsTrue(doubleList == std::initializer_list<double>{-1.95, -4.13, -2.6, -4});
			doubleList.pop_front();
			Assert::IsTrue(doubleList == std::initializer_list<double>{-4.13, -2.6, -4 });
		}
		TEST_METHOD(TEST_POP_BACK) {
			singlyLinkedList<int> intList{};
			intList.pop_back();
			Assert::IsTrue(intList == std::initializer_list<int>{});

			intList = { 1 };
			intList.pop_back();
			Assert::IsTrue(intList == std::initializer_list<int>{});
			intList = { -3 };
			intList.pop_back();
			Assert::IsTrue(intList == std::initializer_list<int>{});
			intList = { 0 };
			intList.pop_back();
			Assert::IsTrue(intList == std::initializer_list<int>{});

			intList = { 1, 3 };
			intList.pop_back();
			Assert::IsTrue(intList == std::initializer_list<int>{1});
			intList.pop_back();
			Assert::IsTrue(intList == std::initializer_list<int>{});
			intList = { -3, 0 };
			intList.pop_back();
			Assert::IsTrue(intList == std::initializer_list<int>{-3});
			intList.pop_back();
			Assert::IsTrue(intList == std::initializer_list<int>{});
			intList = { -4, -1 };
			intList.pop_back();
			Assert::IsTrue(intList == std::initializer_list<int>{-4});
			intList.pop_back();
			Assert::IsTrue(intList == std::initializer_list<int>{});

			intList = { 2, 4, 3 };
			intList.pop_back();
			Assert::IsTrue(intList == std::initializer_list<int>{2, 4});
			intList.pop_back();
			Assert::IsTrue(intList == std::initializer_list<int>{2});
			intList = { -6, 5, 2 };
			intList.pop_back();
			Assert::IsTrue(intList == std::initializer_list<int>{-6, 5});
			intList.pop_back();
			Assert::IsTrue(intList == std::initializer_list<int>{-6});
			intList = { -5, -1, -1 };
			intList.pop_back();
			Assert::IsTrue(intList == std::initializer_list<int>{-5, -1});
			intList.pop_back();
			Assert::IsTrue(intList == std::initializer_list<int>{-5});

			intList = { 1, 2, 3, 1 };
			intList.pop_back();
			Assert::IsTrue(intList == std::initializer_list<int>{1, 2, 3});
			intList.pop_back();
			Assert::IsTrue(intList == std::initializer_list<int>{1, 2});
			intList = { -5, 1, 2, -2 };
			intList.pop_back();
			Assert::IsTrue(intList == std::initializer_list<int>{-5, 1, 2});
			intList.pop_back();
			Assert::IsTrue(intList == std::initializer_list<int>{-5, 1});
			intList = { -3, -2, -2, -3 };
			intList.pop_back();
			Assert::IsTrue(intList == std::initializer_list<int>{-3, -2, -2});
			intList.pop_back();
			Assert::IsTrue(intList == std::initializer_list<int>{-3, -2});

			intList = { 4, 2, 3, 5, 1 };
			intList.pop_back();
			Assert::IsTrue(intList == std::initializer_list<int>{4, 2, 3, 5});
			intList.pop_back();
			Assert::IsTrue(intList == std::initializer_list<int>{4, 2, 3});
			intList = { -2, 0, 1, -3, 5 };
			intList.pop_back();
			Assert::IsTrue(intList == std::initializer_list<int>{-2, 0, 1, -3});
			intList.pop_back();
			Assert::IsTrue(intList == std::initializer_list<int>{-2, 0, 1});
			intList = { -6, -1, -2, -1, -5 };
			intList.pop_back();
			Assert::IsTrue(intList == std::initializer_list<int>{-6, -1, -2, -1});
			intList.pop_back();
			Assert::IsTrue(intList == std::initializer_list<int>{-6, -1, -2});

			singlyLinkedList<double> doubleList{};
			doubleList.pop_back();
			Assert::IsTrue(doubleList == std::initializer_list<double>{});

			doubleList = { 2.25 };
			doubleList.pop_back();
			Assert::IsTrue(doubleList == std::initializer_list<double>{});
			doubleList = { 0 };
			doubleList.pop_back();
			Assert::IsTrue(doubleList == std::initializer_list<double>{});
			doubleList = { -1.165 };
			doubleList.pop_back();
			Assert::IsTrue(doubleList == std::initializer_list<double>{});

			doubleList = { 3.14, 4.25 };
			doubleList.pop_back();
			Assert::IsTrue(doubleList == std::initializer_list<double>{3.14 });
			doubleList.pop_back();
			Assert::IsTrue(doubleList == std::initializer_list<double>{});
			doubleList = { -1.65, 2.43 };
			doubleList.pop_back();
			Assert::IsTrue(doubleList == std::initializer_list<double>{-1.65});
			doubleList.pop_back();
			Assert::IsTrue(doubleList == std::initializer_list<double>{ });
			doubleList = { -5.13, -3.24 };
			doubleList.pop_back();
			Assert::IsTrue(doubleList == std::initializer_list<double>{-5.13});
			doubleList.pop_back();
			Assert::IsTrue(doubleList == std::initializer_list<double>{ });

			doubleList = { 22.4, 1.16, 2.778 };
			doubleList.pop_back();
			Assert::IsTrue(doubleList == std::initializer_list<double>{22.4, 1.16 });
			doubleList.pop_back();
			Assert::IsTrue(doubleList == std::initializer_list<double>{22.4 });
			doubleList = { -0.2, 2.505, -3.09 };
			doubleList.pop_back();
			Assert::IsTrue(doubleList == std::initializer_list<double>{-0.2, 2.505});
			doubleList.pop_back();
			Assert::IsTrue(doubleList == std::initializer_list<double>{-0.2 });
			doubleList = { -1.92, -3.82, -2.09 };
			doubleList.pop_back();
			Assert::IsTrue(doubleList == std::initializer_list<double>{-1.92, -3.82});
			doubleList.pop_back();
			Assert::IsTrue(doubleList == std::initializer_list<double>{-1.92 });

			doubleList = { 1.74, 2.91, 1.84, 0.25 };
			doubleList.pop_back();
			Assert::IsTrue(doubleList == std::initializer_list<double>{1.74, 2.91, 1.84 });
			doubleList.pop_back();
			Assert::IsTrue(doubleList == std::initializer_list<double>{1.74, 2.91 });
			doubleList = { -0.95, 2.31, 9.21, -2.3 };
			doubleList.pop_back();
			Assert::IsTrue(doubleList == std::initializer_list<double>{-0.95, 2.31, 9.21});
			doubleList.pop_back();
			Assert::IsTrue(doubleList == std::initializer_list<double>{-0.95, 2.31 });
			doubleList = { -1.45, -2, -5.65, -2.9 };
			doubleList.pop_back();
			Assert::IsTrue(doubleList == std::initializer_list<double>{-1.45, -2, -5.65});
			doubleList.pop_back();
			Assert::IsTrue(doubleList == std::initializer_list<double>{-1.45, -2 });

			doubleList = { 2.95, 3.14, 1.85, 0.59, 3.94 };
			doubleList.pop_back();
			Assert::IsTrue(doubleList == std::initializer_list<double>{2.95, 3.14, 1.85, 0.59 });
			doubleList.pop_back();
			Assert::IsTrue(doubleList == std::initializer_list<double>{2.95, 3.14, 1.85 });
			doubleList = { -2.56, 6.28, -1.5, 0, 9.67 };
			doubleList.pop_back();
			Assert::IsTrue(doubleList == std::initializer_list<double>{-2.56, 6.28, -1.5, 0});
			doubleList.pop_back();
			Assert::IsTrue(doubleList == std::initializer_list<double>{ -2.56, 6.28, -1.5 });
			doubleList = { -0.95, -1.95, -4.13, -2.6, -4 };
			doubleList.pop_back();
			Assert::IsTrue(doubleList == std::initializer_list<double>{-0.95, -1.95, -4.13, -2.6});
			doubleList.pop_back();
			Assert::IsTrue(doubleList == std::initializer_list<double>{-0.95, -1.95, -4.13 });
		}
		TEST_METHOD(TEST_RIGHT_SHIFT) {
			singlyLinkedList<int> intList{};
			intList.rightShift(0);
			Assert::IsTrue(intList == std::initializer_list<int>{});
			intList = {};
			intList.rightShift(1);
			Assert::IsTrue(intList == std::initializer_list<int>{});
			intList = {};
			intList.rightShift(2);
			Assert::IsTrue(intList == std::initializer_list<int>{});
			intList = {};
			intList.rightShift(3);
			Assert::IsTrue(intList == std::initializer_list<int>{});
			intList = {};
			intList.rightShift(4);
			Assert::IsTrue(intList == std::initializer_list<int>{});
			intList = {};
			intList.rightShift(5);
			Assert::IsTrue(intList == std::initializer_list<int>{});

			intList = {1};
			intList.rightShift(0);
			Assert::IsTrue(intList == std::initializer_list<int>{1});
			intList = { 1 };
			intList.rightShift(1);
			Assert::IsTrue(intList == std::initializer_list<int>{1});
			intList = { 1 };
			intList.rightShift(2);
			Assert::IsTrue(intList == std::initializer_list<int>{1});
			intList = { 1 };
			intList.rightShift(3);
			Assert::IsTrue(intList == std::initializer_list<int>{1});
			intList = { 1 };
			intList.rightShift(4);
			Assert::IsTrue(intList == std::initializer_list<int>{1});
			intList = { 1 };
			intList.rightShift(5);
			Assert::IsTrue(intList == std::initializer_list<int>{1});

			intList = { -1, 1 };
			intList.rightShift(0);
			Assert::IsTrue(intList == std::initializer_list<int>{-1, 1});
			intList = { -1, 1 };
			intList.rightShift(1);
			Assert::IsTrue(intList == std::initializer_list<int>{1, -1});
			intList = { -1, 1 };
			intList.rightShift(2);
			Assert::IsTrue(intList == std::initializer_list<int>{-1, 1});
			intList = { -1, 1 };
			intList.rightShift(3);
			Assert::IsTrue(intList == std::initializer_list<int>{1, -1});
			intList = { -1, 1 };
			intList.rightShift(4);
			Assert::IsTrue(intList == std::initializer_list<int>{-1, 1});
			intList = { -1, 1 };
			intList.rightShift(5);
			Assert::IsTrue(intList == std::initializer_list<int>{1, -1});

			intList = { -3, -2, -1 };
			intList.rightShift(0);
			Assert::IsTrue(intList == std::initializer_list<int>{-3, -2, -1});
			intList = { -3, -2, -1 };
			intList.rightShift(1);
			Assert::IsTrue(intList == std::initializer_list<int>{-1, -3, -2});
			intList = { -3, -2, -1 };
			intList.rightShift(2);
			Assert::IsTrue(intList == std::initializer_list<int>{-2, -1, -3});
			intList = { -3, -2, -1 };
			intList.rightShift(3);
			Assert::IsTrue(intList == std::initializer_list<int>{-3, -2, -1});
			intList = { -3, -2, -1 };
			intList.rightShift(4);
			Assert::IsTrue(intList == std::initializer_list<int>{-1, -3, -2});
			intList = { -3, -2, -1 };
			intList.rightShift(5);
			Assert::IsTrue(intList == std::initializer_list<int>{-2, -1, -3});

			intList = { -3, -2, -1, 0 };
			intList.rightShift(0);
			Assert::IsTrue(intList == std::initializer_list<int>{-3, -2, -1, 0});
			intList = { -3, -2, -1, 0 };
			intList.rightShift(1);
			Assert::IsTrue(intList == std::initializer_list<int>{0, -3, -2, -1});
			intList = { -3, -2, -1, 0 };
			intList.rightShift(2);
			Assert::IsTrue(intList == std::initializer_list<int>{-1, 0, -3, -2});
			intList = { -3, -2, -1, 0 };
			intList.rightShift(3);
			Assert::IsTrue(intList == std::initializer_list<int>{-2, -1, 0, -3});
			intList = { -3, -2, -1, 0 };
			intList.rightShift(4);
			Assert::IsTrue(intList == std::initializer_list<int>{-3, -2, -1, 0});
			intList = { -3, -2, -1, 0 };
			intList.rightShift(5);
			Assert::IsTrue(intList == std::initializer_list<int>{0, -3, -2, -1});

			intList = { -4, -3, -2, -1, 0 };
			intList.rightShift(0);
			Assert::IsTrue(intList == std::initializer_list<int>{-4, -3, -2, -1, 0});
			intList = { -4, -3, -2, -1, 0 };
			intList.rightShift(1);
			Assert::IsTrue(intList == std::initializer_list<int>{0, -4, -3, -2, -1});
			intList = { -4, -3, -2, -1, 0 };
			intList.rightShift(2);
			Assert::IsTrue(intList == std::initializer_list<int>{-1, 0, -4, -3, -2});
			intList = { -4, -3, -2, -1, 0 };
			intList.rightShift(3);
			Assert::IsTrue(intList == std::initializer_list<int>{-2, -1, 0, -4, -3});
			intList = { -4, -3, -2, -1, 0 };
			intList.rightShift(4);
			Assert::IsTrue(intList == std::initializer_list<int>{-3, -2, -1, 0, -4});
			intList = { -4, -3, -2, -1, 0 };
			intList.rightShift(5);
			Assert::IsTrue(intList == std::initializer_list<int>{-4, -3, -2, -1, 0});

			singlyLinkedList<double> doubleList{};
			doubleList.rightShift(0);
			Assert::IsTrue(doubleList == std::initializer_list<double>{});
			doubleList = {};
			doubleList.rightShift(1);
			Assert::IsTrue(doubleList == std::initializer_list<double>{});
			doubleList = {};
			doubleList.rightShift(2);
			Assert::IsTrue(doubleList == std::initializer_list<double>{});
			doubleList = {};
			doubleList.rightShift(3);
			Assert::IsTrue(doubleList == std::initializer_list<double>{});
			doubleList = {};
			doubleList.rightShift(4);
			Assert::IsTrue(doubleList == std::initializer_list<double>{});
			doubleList = {};
			doubleList.rightShift(5);
			Assert::IsTrue(doubleList == std::initializer_list<double>{});

			doubleList = {3.1415};
			doubleList.rightShift(0);
			Assert::IsTrue(doubleList == std::initializer_list<double>{3.1415});
			doubleList = { 3.1415 };
			doubleList.rightShift(1);
			Assert::IsTrue(doubleList == std::initializer_list<double>{3.1415});
			doubleList = { 3.1415 };
			doubleList.rightShift(2);
			Assert::IsTrue(doubleList == std::initializer_list<double>{3.1415});
			doubleList = { 3.1415 };
			doubleList.rightShift(3);
			Assert::IsTrue(doubleList == std::initializer_list<double>{3.1415});
			doubleList = { 3.1415 };
			doubleList.rightShift(4);
			Assert::IsTrue(doubleList == std::initializer_list<double>{3.1415});
			doubleList = { 3.1415 };
			doubleList.rightShift(5);
			Assert::IsTrue(doubleList == std::initializer_list<double>{3.1415});

			doubleList = { -1.618, 2.71828 };
			doubleList.rightShift(0);
			Assert::IsTrue(doubleList == std::initializer_list<double>{-1.618, 2.71828});
			doubleList = { -1.618, 2.71828 };
			doubleList.rightShift(1);
			Assert::IsTrue(doubleList == std::initializer_list<double>{2.71828, -1.618});
			doubleList = { -1.618, 2.71828 };
			doubleList.rightShift(2);
			Assert::IsTrue(doubleList == std::initializer_list<double>{-1.618, 2.71828});
			doubleList = { -1.618, 2.71828 };
			doubleList.rightShift(3);
			Assert::IsTrue(doubleList == std::initializer_list<double>{2.71828, -1.618});
			doubleList = { -1.618, 2.71828 };
			doubleList.rightShift(4);
			Assert::IsTrue(doubleList == std::initializer_list<double>{-1.618, 2.71828});
			doubleList = { -1.618, 2.71828 };
			doubleList.rightShift(5);
			Assert::IsTrue(doubleList == std::initializer_list<double>{2.71828, -1.618});

			doubleList = { 0, -2.24, -1.16 };
			doubleList.rightShift(0);
			Assert::IsTrue(doubleList == std::initializer_list<double>{0, -2.24, -1.16});
			doubleList = { -0, -2.24, -1.16 };
			doubleList.rightShift(1);
			Assert::IsTrue(doubleList == std::initializer_list<double>{-1.16, 0, -2.24});
			doubleList = { 0, -2.24, -1.16 };
			doubleList.rightShift(2);
			Assert::IsTrue(doubleList == std::initializer_list<double>{-2.24, -1.16, 0});
			doubleList = { 0, -2.24, -1.16 };
			doubleList.rightShift(3);
			Assert::IsTrue(doubleList == std::initializer_list<double>{0, -2.24, -1.16});
			doubleList = { 0, -2.24, -1.16 };
			doubleList.rightShift(4);
			Assert::IsTrue(doubleList == std::initializer_list<double>{-1.16, 0, -2.24});
			doubleList = { 0, -2.24, -1.16 };
			doubleList.rightShift(5);
			Assert::IsTrue(doubleList == std::initializer_list<double>{-2.24, -1.16, 0});
		}
	};
}